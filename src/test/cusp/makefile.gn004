CC=nvcc
CFLAGS=-lcudadevrt -rdc=true
CXXFLAGS=-Xcompiler -DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_CUDA -Xcompiler -DCUSP_DEVICE_BLAS_SYSTEM=CUSP_DEVICE_BLAS_THRUST -Xcompiler -DCUSP_HOST_BLAS_SYSTEM=CUSP_HOST_BLAS_THRUST -Xcompiler -Wall --std=c++11
# Others at SEI: if you compile this, you might need to put cusplibrary in this location...
INC=-I/nfs/future_architectures/jcmatty/gpu_graph/graphblas/src -I/nfs/future_architectures/jcmatty/cusplibrary
OPTIM= -O3 -Xcompiler -O3
DEBUG= -g -G
ARCH=-gencode arch=compute_35,code=sm_35 #-gencode arch=compute_20,code=sm_20 -gencode arch=compute_30,code=sm_30 -gencode arch=compute_50,code=sm_50

all: test_merge test_ewiseapply test_thrust_merge test_mxm

test_merge: test_merge.cu
	$(CC) $(CXXFLAGS) $(INC) $(OPTIM) test_merge.cu -o test_merge

test_ewiseapply: test_ewiseapply.cu
	$(CC) $(CXXFLAGS) $(INC) $(OPTIM) test_ewiseapply.cu -o test_ewiseapply

test_thrust_merge: test_thrust_merge.cu
	$(CC) $(CXXFLAGS) $(INC) $(OPTIM) test_thrust_merge.cu -o test_thrust_merge

test_mxm:
	$(CC) $(CXXFLAGS) $(INC) $(OPTIM) test_mxm.cu -o test_mxm

test_assign_vector: test_assign_vector.cu
	$(CC) $(CXXFLAGS) $(INC) $(DEBUG) test_assign_vector.cu -o test_assign_vector

clean:
	rm -rf *.o *.a test_thrust_merge test_ewiseapply test_merge test_mxm test_assign_vector
